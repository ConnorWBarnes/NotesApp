services:
  # Frontend services
  frontend:
    build:
      context: frontend
      target: development
    profiles: ["frontend"]
    ports:
      - 4200:4200
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - frontend-backend
    depends_on:
      - note.service

  # Backend services
  access.proxy:
    build:
      context: .
      dockerfile: proxies/access.proxy/Dockerfile
    container_name: access.proxy
    ports:
      - 3000:3000
    depends_on: 
      - access.service
    networks:
      - frontend-backend

  access.service:
    image: ${DOCKER_REGISTRY-}notesappbackendservicesaccessapi
    container_name: access.service
    build:
      context: .
      dockerfile: backend/src/Services/Access/NotesApp.Backend.Services.Access.Api/Dockerfile
    depends_on:
      - sql
    networks:
      - backend-data
      - frontend-backend
    environment:
      - ASPNETCORE_URLS=http://+:8000
      - ConnectionStrings__EntityFrameworkStore="Server=host.docker.internal,1433;Database=Production;User ID=sa;Password=Administrator1+;MultipleActiveResultSets=True;TrustServerCertificate=True;App=EntityFramework"
      #- ConnectionStrings__MongoStore=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOSTNAME}:${MONGODB_PORT}

  note.proxy:
    build:
      context: .
      dockerfile: proxies/note.proxy/Dockerfile
    container_name: note.proxy
    ports:
      - 3001:3001
    depends_on: 
      - note.service
    networks:
      - frontend-backend

  note.service:
    image: ${DOCKER_REGISTRY-}notesappbackendservicesnoteapi
    container_name: note.service
    build:
      context: .
      dockerfile: backend/src/Services/Note/NotesApp.Backend.Services.Note.Api/Dockerfile
    depends_on:
      - mongo
    networks:
      - backend-data
      - frontend-backend
    environment:
      - ASPNETCORE_URLS=http://+:8000
      - ConnectionStrings__MongoStore=mongodb://mongo:27017/TodoApp
      #- ConnectionStrings__MongoStore=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOSTNAME}:${MONGODB_PORT}
  
  # Data storage
  mongo:
    image: mongo:4.2.0
    volumes:
      - mongo_data:/data/db
    networks:
      - backend-data
    expose:
      - 27017

  sql:
    image: mcr.microsoft.com/mssql/server
    restart: always
    environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "5434:1433"
    healthcheck:
        test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P example_123 -Q 'SELECT 1' || exit 1"]
        interval: 10s
        retries: 10
        start_period: 10s
        timeout: 3s     

networks:
  backend-data:
  frontend-backend:

volumes:
  mongo_data:
